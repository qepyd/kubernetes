apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}
  labels:
    deploy: {{ .Values.podLabels.app }}
    #env: {{ .Values.podLabels.env }}
spec:
  replicas: {{ .Values.replicaCount }} 
  selector:
    matchLabels:
      env: {{ .Values.podLabels.env }}
      app: {{ .Values.podLabels.app }}
  template:
    metadata:
      labels:
        env: {{ .Values.podLabels.env }}
        app: {{ .Values.podLabels.app }}
    spec:
      containers:
      - name: "{{ .Values.image.containres.applicationContainer.image }}" 
        image: "{{ .Values.image.containres.applicationContainer.repository }}/{{ .Values.image.containres.applicationContainer.image }}:{{ .Values.image.containres.applicationContainer.tag }}" 
        imagePullPolicy: "{{ .Values.image.containres.pullPolicy }}"
        command:
        - "/bin/sh"
        args:
        - "-c"
        - "echo myapp01 >/usr/share/nginx/html/index.html && nginx -g 'daemon off;'"
        ports:
        - name: http
          containerPort: {{ .Values.service.port }} 
      - name: "{{ .Values.image.containres.sidecarContainer01.image }}"
        image: "{{ .Values.image.containres.sidecarContainer01.repository }}/{{ .Values.image.containres.sidecarContainer01.image }}:{{ .Values.image.containres.sidecarContainer01.tag }}"
        imagePullPolicy: "{{ .Values.image.containres.sidecarContainer01.pullPolicy }}"
        command:
        - "/bin/bash"
        args:
        - "-c"
        - "sleep 500000000"
