---
apiVersion: v1
kind: Pod
metadata:
  namespace: lili
  name: requests-effect-pod-dispatch-but-memory 
  labels:
    app: requests-effect-pod-dispatch-but-memory
spec:
  containers:
  - name: myapp01
    image: swr.cn-north-1.myhuaweicloud.com/library/nginx:1.16
    # <== 资源限制(limits)和请求(requests)
    resources:
      requests:
        cpu: "50m"
        memory: "216Mi"
  - name: busybox
    image: swr.cn-north-1.myhuaweicloud.com/library/busybox:1.31
    command:
    - "/bin/sh"
    args:
    - "-c"
    - "sleep 1000000000"
    # <== 资源限制(limits)和请求(requests)
    resources:
      limits:
        cpu: "1000m"
        memory: "1024Gi"  # requests.memory等于同，我设置得有点大 
---
#
# 此资源对象所在namespace的describe信息为
#   root@master01:~# kubectl describe ns lili
#   Name:         lili
#   Labels:       kubernetes.io/metadata.name=lili
#   Annotations:  <none>
#   Status:       Active
#   
#   No resource quota.
#  
#   No LimitRange resource.
#
# 此资源对象可以被kube-apiserver所接受，会被创建。在我的kubernetes环境中是但无法被调度的，Pod处于Pending状态。
#   因为我的kubernetes环境没有任何worker node满足此资源对象的总requests
#   此资源对象创建后，其各容器的limits和requests在线获取命令为：
#      kubectl get -f 05.pods_requests-effect-pod-dispatch-but-memory.yaml  -o json | jq ".spec.containers[].name, .spec.containers[].resources"
#   查看此资源对象的describe信息：
#     root@master01:~# kubectl describe -f 05.pods_requests-effect-pod-dispatch-but-memory.yaml  | grep -A 10000 "Events:"
#     Events:
#       Type     Reason            Age   From               Message
#       ----     ------            ----  ----               -------
#       Warning  FailedScheduling  14s   default-scheduler  0/5 nodes are available: 1 node(s) had untolerated taint {node-role.kubernetes.io/control-plane: }, 2 node(s) had untolerated taint {node-role.kubernetes.io/master: }, 5 Insufficient memory. preemption: 0/5 nodes are available: 2 No preemption victims found for incoming pod, 3 Preemption is not helpful for scheduling.
#
#
