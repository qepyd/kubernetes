---
apiVersion: v1
kind: Pod
metadata:
  namespace: lili
  name: startupprobe-failure01
  labels:
    app: startupprobe-failure01
spec:
  #### Pod级别
  # <== Pod中容器的重启策略
  #     默认值：Always
  #     可设值：Always、OnFailure、Never
  restartPolicy: Always

  #### 容器级别之主容器
  containers:
  - name: demoapp
    image: swr.cn-north-1.myhuaweicloud.com/qepyd/demoapp:v1.1
    imagePullPolicy: Always

    # <== 启动应用和命令(得300秒才能够启动成功)
    command:
    - '/bin/sh'
    args:
    - '-c'
    - 'sleep 300; python3 /usr/local/bin/demo.py'

    # <== 端口列表(人类可读)
    ports:
    - name: http-80
      containerPort: 80

    # <== 启动探测
    startupProbe:
      # <-- 初始探测时等待时长(单位秒)
      #     就是这里的问题(未将应用的启动时长考滤进来,导致startupProbe探测失败)
      #        影响Pod加入到svc的后端端点
      #        导致容器陷入重启死循环
      initialDelaySeconds: 10
      # <-- 探测超时的秒数(默认1秒)
      timeoutSeconds: 1
      # <-- 失败次数
      failureThreshold: 3
      # <-- 成功次数
      successThreshold: 1
      # <-- 执行探测的频率(以秒为单位),默认10，最低取值为1。
      periodSeconds: 10
      # <-- 探针(应用程序支持，且我写对了的)
      exec:
        command: 
        - '/bin/sh'
        - '-c'
        - '[ $(curl -s 127.0.0.1:80/readyz) == "OK" ]'
---
apiVersion: v1
kind: Service
metadata:
  namespace: lili
  name: startupprobe-failure01
  labels:
    app: startupprobe-failure01
spec:
  selector:
    app: startupprobe-failure01
  type: ClusterIP
  ports:
  - name: http-80
    appProtocol: http
    port: 80
    protocol: "TCP"
    targetPort: http-80
---

