---
# 应用程序要360秒后才能够启动成功。
# startupProbe探测规则和命令
#    # <== 规则
#    初始探测等待10秒
#    探测超时时长1秒
#    失败次数3
#    成功次数1
#    探测间隔10秒
#    # <== 命令
#    应用程序支持，且我写正确了的。
# startupProbe探测过程。
#    Pod级别其 restartPolicy 默认为Always。
#    startupProbe探测失败，会延后10s后重启容器。
#    startupProbe探测失败，会延后20s后重启容器。
#    startupProbe探测失败，会延后40s后重启容器。
#    .........................................
#    .....................，延后是300s(5m), Pod状态为 CrashLoopBackOff
#    startupProbe探测成功。
---
apiVersion: v1
kind: Pod
metadata:
  namespace: lili
  name: startupprobe-success
  labels:
    app: startupprobe-success
spec:
  #### Pod级别
  # <== 重启策略
  #     默认值：Always
  #     可设值：Always、OnFailure、Never
  restartPolicy: Always

  #### 容器级别之主容器
  containers:
  - name: demoapp
    image: swr.cn-north-1.myhuaweicloud.com/qepyd/demoapp:v1.1
    imagePullPolicy: Always

    # <== 启动应用和命令(会立即启动,耗时2秒内)
    command:
    - '/bin/sh'
    args:
    - '-c'
    - 'sleep 300; python3 /usr/local/bin/demo.py'

    # <== 端口列表(人类可读)
    ports:
    - name: http-80
      containerPort: 80

    # <== 启动控制
    startupProbe:
      # <-- 初始探测时等待时长(单位秒)，
      initialDelaySeconds: 300
      # <-- 探测超时的秒数(默认1秒)
      timeoutSeconds: 1
      # <-- 失败次数
      failureThreshold: 3
      # <-- 成功次数
      successThreshold: 1
      # <-- 执行探测的频率(以秒为单位),默认10，最低取值为1。
      periodSeconds: 10
      # <-- 探针(我写对了的)
      exec:
        command: 
        - '/bin/sh'
        - '-c'
        - '[ $(curl -s 127.0.0.1/readyz) == "OK" ]'
---
apiVersion: v1
kind: Service
metadata:
  namespace: lili
  name: startupprobe-success
  labels:
    app: startupprobe-success
spec:
  selector:
    app: startupprobe-success
  type: ClusterIP
  ports:
  - name: http-80
    appProtocol: http
    port: 80
    protocol: "TCP"
    targetPort: http-80
